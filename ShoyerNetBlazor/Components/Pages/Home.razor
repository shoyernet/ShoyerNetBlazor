@page "/"
@rendermode InteractiveServer

@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.Extensions.DependencyInjection
@inject NavigationManager NavigationManager


<section id="hero" class="hero section dark-background">

	<div class="video-container" alt="" data-aos="fade-in">
		<video id="backgroundVideo" autoplay muted playsinline loop style="width: 100%; height: 100%;">
			<source type="video/mp4" src="@SelectVideo()">
		</video>
	</div>

	<div class="container">
		<div class="row">
			<div class="col-xl-4">
				<h1 data-aos="fade-up">Prioritize What Counts!</h1>
				<blockquote data-aos="fade-up" data-aos-delay="100">
					<p>Focus on growing your business while we deliver smart, seamless tools to handle operations—saving you time, reducing hassle, and boosting efficiency!</p>
				</blockquote>
			</div>
		</div>
		<div id="homeCarouselWrapper" data-aos="fade-up">
			<div class="row title">What Do we offer?</div>
			<div id="homeCarousel" class="carousel slide" data-bs-ride="carousel">
				<!-- Slides -->
				<div class="carousel-inner">
					<div class="carousel-item active">
						<span class="headline"><i class="fa-brands fa-whatsapp"></i> WhatsApp Integration</span><br />
						<span class="body">The easiest keep in touch with your customers. Help them to book and track the services your offer!</span>
					</div>
					<div class="carousel-item">
						<span class="headline"><i class="fa-brands fa-microsoft"></i> Microsoft Integration</span><br />
						<span class="body">Integrate your working environment with Microsoft tools and increase the productivity of you and your team!</span>
					</div>
					<div class="carousel-item">
						<span class="headline"><i class="fa-light fa-mobile-notch"></i> App Development</span><br />
						<span class="body">The easiest way to access your customers! Offer them a direct access to your services and use Push Notifications for marketing and services updates!</span>
					</div>
					<div class="carousel-item">
						<span class="headline"><i class="fa-solid fa-wallet"></i> Electronic Wallet</span><br />
						<span class="body">Build your own loyality club and use electronic wallet for a fast track checkout. Did you know? Sometimes an electronic wallet can be an easy and cheap way to replace a full app!</span>
					</div>
				</div>
				<div class="carousel-indicators">
					<button type="button" data-bs-target="#homeCarousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
					<button type="button" data-bs-target="#homeCarousel" data-bs-slide-to="1" aria-label="Slide 2"></button>
					<button type="button" data-bs-target="#homeCarousel" data-bs-slide-to="2" aria-label="Slide 3"></button>
					<button type="button" data-bs-target="#homeCarousel" data-bs-slide-to="3" aria-label="Slide 4"></button>
				</div>
			</div>
		</div>
	</div>

	<!-- Chat Bubble Button -->
	<div class="chat-bubble" onclick="toggleChat()">
		<i class="fa-solid fa-headset"></i>
	</div>

	<!-- Chat Box -->
	<div class="chat-box" id="chatBox">
		<span class="close-btn" onclick="toggleChat()">✖</span>
		<header>Chat Support</header>
		<div style="color: black;">
			@foreach (var message in messages)
			{
				@message
			}
		</div>
		<input @bind="userInput" placeholder="Your name" />
		<input @bind="messageInput" placeholder="Your message" />
		<button class="btn btn-primary" @onclick="SendMessage">Send</button>
	</div>
</section>

@code {
	private string SelectVideo()
	{
		var videos = new List<string>
		{
			"/assets/clips/background1.mp4",
			"/assets/clips/background2.mp4",
			"/assets/clips/background3.mp4",
		};

		var randomNumber = new Random().Next(0, 2);

		return videos[randomNumber];

	}

	private int currentCount = 0;

	private void IncrementCount()
	{
		currentCount++;
	}

	private string userInput;
	private string messageInput;
	private List<string> messages = new List<string>();
	private HubConnection hubConnection;

	protected override async Task OnInitializedAsync()
	{
		hubConnection = new HubConnectionBuilder()
			.WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
			.Build();

		hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
		{
			var encodedMessage = $"{user}: {message}";
			messages.Add(encodedMessage);
			InvokeAsync(StateHasChanged);
		});

		await hubConnection.StartAsync();
	}

	private async Task SendMessage()
	{
		if (!string.IsNullOrEmpty(userInput) && !string.IsNullOrEmpty(messageInput))
		{
			await hubConnection.SendAsync("SendMessage", userInput, messageInput);
			messageInput = string.Empty;
		}
	}

	public bool IsConnected => hubConnection.State == HubConnectionState.Connected;

	public async ValueTask DisposeAsync()
	{
		if (hubConnection != null)
		{
			await hubConnection.DisposeAsync();
		}
	}
}
